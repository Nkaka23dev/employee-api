CREATE TABLE IF NOT EXISTS "__EFMigrationsHistory" (
    "MigrationId" character varying(150) NOT NULL,
    "ProductVersion" character varying(32) NOT NULL,
    CONSTRAINT "PK___EFMigrationsHistory" PRIMARY KEY ("MigrationId")
);

START TRANSACTION;
CREATE TABLE aspnetroles (
    id text NOT NULL,
    name character varying(256),
    normalizedname character varying(256),
    concurrencystamp text,
    CONSTRAINT pk_aspnetroles PRIMARY KEY (id)
);

CREATE TABLE aspnetusers (
    id text NOT NULL,
    firstname text NOT NULL,
    lastname text NOT NULL,
    gender text NOT NULL,
    refreshtoken text,
    refreshtokenexpirytime timestamp with time zone,
    createdon timestamp with time zone NOT NULL,
    updatedon timestamp with time zone NOT NULL,
    username character varying(256),
    normalizedusername character varying(256),
    email character varying(256),
    normalizedemail character varying(256),
    emailconfirmed boolean NOT NULL,
    passwordhash text,
    securitystamp text,
    concurrencystamp text,
    phonenumber text,
    phonenumberconfirmed boolean NOT NULL,
    twofactorenabled boolean NOT NULL,
    lockoutend timestamp with time zone,
    lockoutenabled boolean NOT NULL,
    accessfailedcount integer NOT NULL,
    CONSTRAINT pk_aspnetusers PRIMARY KEY (id)
);

CREATE TABLE benefits (
    id integer GENERATED BY DEFAULT AS IDENTITY,
    name text NOT NULL,
    description text NOT NULL,
    basecost numeric NOT NULL,
    CONSTRAINT pk_benefits PRIMARY KEY (id)
);

CREATE TABLE employees (
    id integer GENERATED BY DEFAULT AS IDENTITY,
    firstname text NOT NULL,
    lastname text NOT NULL,
    socialsecuritynumber text,
    address1 text,
    address2 text,
    city text,
    state text,
    zipcode text,
    phonenumber text,
    email text,
    createdby text,
    createdon timestamp with time zone,
    lastmodifiedby text,
    lastmodifiedon timestamp with time zone,
    CONSTRAINT pk_employees PRIMARY KEY (id)
);

CREATE TABLE aspnetroleclaims (
    id integer GENERATED BY DEFAULT AS IDENTITY,
    roleid text NOT NULL,
    claimtype text,
    claimvalue text,
    CONSTRAINT pk_aspnetroleclaims PRIMARY KEY (id),
    CONSTRAINT fk_aspnetroleclaims_aspnetroles_roleid FOREIGN KEY (roleid) REFERENCES aspnetroles (id) ON DELETE CASCADE
);

CREATE TABLE aspnetuserclaims (
    id integer GENERATED BY DEFAULT AS IDENTITY,
    userid text NOT NULL,
    claimtype text,
    claimvalue text,
    CONSTRAINT pk_aspnetuserclaims PRIMARY KEY (id),
    CONSTRAINT fk_aspnetuserclaims_aspnetusers_userid FOREIGN KEY (userid) REFERENCES aspnetusers (id) ON DELETE CASCADE
);

CREATE TABLE aspnetuserlogins (
    loginprovider text NOT NULL,
    providerkey text NOT NULL,
    providerdisplayname text,
    userid text NOT NULL,
    CONSTRAINT pk_aspnetuserlogins PRIMARY KEY (loginprovider, providerkey),
    CONSTRAINT fk_aspnetuserlogins_aspnetusers_userid FOREIGN KEY (userid) REFERENCES aspnetusers (id) ON DELETE CASCADE
);

CREATE TABLE aspnetuserroles (
    userid text NOT NULL,
    roleid text NOT NULL,
    CONSTRAINT pk_aspnetuserroles PRIMARY KEY (userid, roleid),
    CONSTRAINT fk_aspnetuserroles_aspnetroles_roleid FOREIGN KEY (roleid) REFERENCES aspnetroles (id) ON DELETE CASCADE,
    CONSTRAINT fk_aspnetuserroles_aspnetusers_userid FOREIGN KEY (userid) REFERENCES aspnetusers (id) ON DELETE CASCADE
);

CREATE TABLE aspnetusertokens (
    userid text NOT NULL,
    loginprovider text NOT NULL,
    name text NOT NULL,
    value text,
    CONSTRAINT pk_aspnetusertokens PRIMARY KEY (userid, loginprovider, name),
    CONSTRAINT fk_aspnetusertokens_aspnetusers_userid FOREIGN KEY (userid) REFERENCES aspnetusers (id) ON DELETE CASCADE
);

CREATE TABLE employeebenefits (
    id integer GENERATED BY DEFAULT AS IDENTITY,
    employeeid integer NOT NULL,
    benefitid integer NOT NULL,
    costtoemployee numeric,
    CONSTRAINT pk_employeebenefits PRIMARY KEY (id),
    CONSTRAINT fk_employeebenefits_benefits_benefitid FOREIGN KEY (benefitid) REFERENCES benefits (id) ON DELETE CASCADE,
    CONSTRAINT fk_employeebenefits_employees_employeeid FOREIGN KEY (employeeid) REFERENCES employees (id) ON DELETE CASCADE
);

CREATE INDEX ix_aspnetroleclaims_roleid ON aspnetroleclaims (roleid);

CREATE UNIQUE INDEX rolenameindex ON aspnetroles (normalizedname);

CREATE INDEX ix_aspnetuserclaims_userid ON aspnetuserclaims (userid);

CREATE INDEX ix_aspnetuserlogins_userid ON aspnetuserlogins (userid);

CREATE INDEX ix_aspnetuserroles_roleid ON aspnetuserroles (roleid);

CREATE INDEX emailindex ON aspnetusers (normalizedemail);

CREATE UNIQUE INDEX usernameindex ON aspnetusers (normalizedusername);

CREATE INDEX ix_employeebenefits_benefitid ON employeebenefits (benefitid);

CREATE UNIQUE INDEX ix_employeebenefits_employeeid_benefitid ON employeebenefits (employeeid, benefitid);

INSERT INTO "__EFMigrationsHistory" ("MigrationId", "ProductVersion")
VALUES ('20250523184959_InitialCreate', '9.0.3');

COMMIT;

